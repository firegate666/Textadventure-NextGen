<?xml version="1.0" encoding="UTF-8"?>

<project name="Textadventure-NextGen" default="build">

	<taskdef name="jslint"
           classname="com.googlecode.jslint4java.ant.JSLintTask"
           classpath="protected/vendors/jslint/jslint4java-2.0.2.jar" />

	<!-- full build -->
	<target name="build" depends="prepare,yiimigrate,lint,jslint,csslint,phploc,pdepend,phpcpd,phpunit,phpdox" />

	<!-- disabled tasks
		phpcs-ci
		phpmd-ci
		phpcb
	-->

	<!-- no full build, only unittests and syntax/lint -->
	<target name="build_small" depends="prepare,yiimigrate,lint,jslint,csslint,phpunit" />

	<target name="build-parallel" depends="prepare,lint,jslint,csslint,tools-parallel,phpunit" />

	<target name="quickcheck" depends="prepare,lint,jslint,csslint,phpcs,phpcpd,phpunit" />
	
	<!-- disabled tasks
		phpcb
	-->

	<target name="tools-parallel" description="Run tools in parallel">
		<parallel threadCount="2">
			<sequential>
				<antcall target="pdepend" />
				<!--antcall target="phpmd-ci" /-->
			</sequential>
			<antcall target="phpcpd" />
			<!--antcall target="phpcs-ci" /-->
			<antcall target="phploc" />
			<antcall target="phpdox" />
		</parallel>
	</target>

	<target name="clean" description="Cleanup build artifacts">
		<delete dir="${basedir}/build/api" />
		<delete dir="${basedir}/build/code-browser" />
		<delete dir="${basedir}/build/coverage" />
		<delete dir="${basedir}/build/logs" />
		<delete dir="${basedir}/build/pdepend" />
		<delete dir="${basedir}/build/phpdox" />
		<delete dir="${basedir}/build/todo" />
		<delete dir="${basedir}/build/jslint" />
	</target>

	<target name="prepare" depends="clean" description="Prepare for build">
		<mkdir dir="${basedir}/build" />
		<mkdir dir="${basedir}/build/api" />
		<mkdir dir="${basedir}/build/code-browser" />
		<mkdir dir="${basedir}/build/coverage" />
		<mkdir dir="${basedir}/build/logs" />
		<mkdir dir="${basedir}/build/pdepend" />
		<mkdir dir="${basedir}/build/phpdox" />
		<mkdir dir="${basedir}/build/todo" />
		<mkdir dir="${basedir}/build/jslint" />
	</target>

	<target name="lint">
		<apply executable="php" failonerror="true">
			<arg value="-l" />

			<fileset dir="${basedir}">
				<include name="**/*.php" />
				<exclude name="**/vendors/**" />
				<modified />
			</fileset>

		</apply>
	</target>

	<target name="jslint" depends="clean,prepare">
		<jslint options="white,undef,plusplus,newcap,vars,indent=4">
			<predef>jQuery, setTimeout, history, window, document</predef>
			<formatter type="junit" destfile="build/jslint" />
			<formatter type="xml" destfile="build/jslint.xml" />
			<formatter type="checkstyle" destfile="build/jslint-checkstyle.xml" />
			<fileset dir="${basedir}" includes="**/*.js" excludes="protected/vendors/**,public/vendors/**" />
		</jslint>
	</target>

	<target name="csslint">
		<apply executable="java" failonerror="true">
			<arg value="-jar" />
			<arg path="protected/vendors/rhino/js.jar" />
			<arg path="protected/vendors/csslint/release/csslint-rhino.js" />
			<arg value="--format=compact" />
			<arg value="--warnings=empty-rules,import,important,known-properties" />

			<fileset dir="${basedir}">
				<include name="**/*.css" />
				<exclude name="**/vendors/**" />
				<modified />
			</fileset>

		</apply>
	</target>

	<target name="phploc" description="Measure project size using PHPLOC">
		<exec executable="phploc">
			<arg value="--exclude" />
			<arg value="${basedir}/protected/vendors" />
			<arg value="--log-csv" />
			<arg value="${basedir}/build/logs/phploc.csv" />
			<arg path="${basedir}/protected" />
		</exec>
	</target>

	<target name="pdepend" description="Calculate software metrics using PHP_Depend">
		<exec executable="pdepend">
			<arg value="--ignore=${basedir}/protected/vendors" />
			<arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
			<arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
			<arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
			<arg path="${basedir}/protected" />
		</exec>
	</target>

	<target name="phpmd" description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
		<exec executable="phpmd">
			<arg path="${basedir}/protected" />
			<arg value="text" />
			<arg value="${basedir}/build/phpmd.xml" />
		</exec>
	</target>

	<target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
		<exec executable="phpmd">
			<arg value="--exclude=${basedir}/protected/vendors" />
			<arg path="${basedir}/protected" />
			<arg value="xml" />
			<arg value="${basedir}/build/phpmd.xml" />
			<arg value="--reportfile" />
			<arg value="${basedir}/build/logs/pmd.xml" />
		</exec>
	</target>

	<target name="phpcs" description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
		<exec executable="phpcs">
			<arg value="--standard=${basedir}/phpcs.xml" />
			<arg path="${basedir}" />
		</exec>
	</target>

	<target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
		<exec executable="phpcs" output="/dev/null">
			<arg value="--report=checkstyle" />
			<arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
			<arg value="--standard=${basedir}/phpcs.xml" />
			<arg path="${basedir}" />
		</exec>
	</target>

	<target name="phpcpd" description="Find duplicate code using PHPCPD">
		<exec executable="phpcpd">
			<arg value="--exclude" />
			<arg value="${basedir}/protected/vendors" />
			<arg value="--log-pmd" />
			<arg value="${basedir}/build/logs/pmd-cpd.xml" />
			<arg path="${basedir}" />
		</exec>
	</target>

	<target name="yiimigrate" description="Install Yii migrations">
		<!-- production database -->
		<exec executable="${basedir}/protected/yiic">
			<arg value="migrate" />
			<arg value="--interactive=0" />
		</exec>

		<!-- test database -->
		<exec executable="${basedir}/protected/yiic">
			<arg value="migrate" />
			<arg value="--connectionID=testdb" />
			<arg value="--interactive=0" />
		</exec>
	</target>

	<target name="phpdox" description="Generate API documentation using phpDox">
		<exec executable="phpdox" />
	</target>

	<target name="phpunit" description="Run unit tests with PHPUnit">
		<exec executable="phpunit" failonerror="true" />
	</target>

	<target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
		<exec executable="phpcb">
			<arg value="--exclude=protected/vendors" />
			<arg value="--log" />
			<arg path="${basedir}/build/logs" />
			<arg value="--source" />
			<arg path="${basedir}" />
			<arg value="--output" />
			<arg path="${basedir}/build/code-browser" />
		</exec>
	</target>

</project>
